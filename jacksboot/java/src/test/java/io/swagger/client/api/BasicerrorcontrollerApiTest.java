/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BasicerrorcontrollerApi
 */
public class BasicerrorcontrollerApiTest {

    private final BasicerrorcontrollerApi api = new BasicerrorcontrollerApi();

    
    /**
     * error
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void errorUsingDELETETest() throws ApiException {
        // Map<String, Object> response = api.errorUsingDELETE();

        // TODO: test validations
    }
    
    /**
     * error
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void errorUsingGETTest() throws ApiException {
        // Map<String, Object> response = api.errorUsingGET();

        // TODO: test validations
    }
    
    /**
     * error
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void errorUsingHEADTest() throws ApiException {
        // Map<String, Object> response = api.errorUsingHEAD();

        // TODO: test validations
    }
    
    /**
     * error
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void errorUsingOPTIONSTest() throws ApiException {
        // Map<String, Object> response = api.errorUsingOPTIONS();

        // TODO: test validations
    }
    
    /**
     * error
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void errorUsingPATCHTest() throws ApiException {
        // Map<String, Object> response = api.errorUsingPATCH();

        // TODO: test validations
    }
    
    /**
     * error
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void errorUsingPOSTTest() throws ApiException {
        // Map<String, Object> response = api.errorUsingPOST();

        // TODO: test validations
    }
    
    /**
     * error
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void errorUsingPUTTest() throws ApiException {
        // Map<String, Object> response = api.errorUsingPUT();

        // TODO: test validations
    }
    
}
