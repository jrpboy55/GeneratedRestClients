/**
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import java.security.Principal;

import org.junit.Test;

import io.swagger.client.ApiException;

/**
 * API tests for HealthmvcendpointApi
 */
public class HealthmvcendpointApiTest {

    private final HealthmvcendpointApi api = new HealthmvcendpointApi();

    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingDELETETest() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingDELETE(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingDELETE1Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingDELETE1(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingGET16Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingGET16(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingGET17Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingGET17(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingHEADTest() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingHEAD(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingHEAD1Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingHEAD1(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingOPTIONSTest() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingOPTIONS(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingOPTIONS1Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingOPTIONS1(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingPATCHTest() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingPATCH(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingPATCH1Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingPATCH1(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingPOSTTest() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingPOST(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingPOST1Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingPOST1(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingPUTTest() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingPUT(principal);

        // TODO: test validations
    }
    
    /**
     * invoke
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void invokeUsingPUT1Test() throws ApiException {
        Principal principal = null;
        // Object response = api.invokeUsingPUT1(principal);

        // TODO: test validations
    }
    
}
